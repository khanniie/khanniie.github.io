{"version":3,"sources":["webpack:///./src/templates/resume.js","webpack:///./src/components/post.js"],"names":["URL","Resume","data","useStaticQuery","console","log","id","width","boxSizing","alignItems","path","margin","target","href","border","boxShadow","maxWidth","mediaQueries","md","mdDisplay","style","fluid","file","childImageSharp","display","Post","props","title","date","html","coverImage","coverVideo","author","excerpt","tags","previousPost","links","nextPost","previousPath","frontmatter","previousLabel","nextPath","nextLabel","className","fontFamily","fontSize","marginBottom","dangerouslySetInnerHTML","__html"],"mappings":"2FAAA,6HASMA,EAAM,qFAuDGC,UArDA,WACb,IAAMC,EAAOC,YAAe,cAc5B,OAFAC,QAAQC,IAAIH,GAGV,oCACE,kBAAC,IAAD,KACE,0BAAMI,GAAG,cAEX,kBAAC,IAAD,CAAKC,MAAM,QAAQC,UAAU,cAAcC,WAAW,UACpD,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAQC,KAAK,WACb,kBAAC,IAAD,CAAaC,OAAO,oBAApB,mBAAuD,uBAAGC,OAAO,SAASC,KAAMb,GAAzB,sBACrD,kBAAC,IAAD,CACEc,OAAO,+BACPC,UAAU,kCACVR,MAAM,MACNS,SAAS,QACTC,aAAc,CACZC,GAAI,iCAENC,UAAU,QAEV,kBAAC,IAAD,CAAKC,MAAO,CAACb,MAAO,QAASc,MAAOnB,EAAKoB,KAAKC,gBAAgBF,SAEhE,kBAAC,IAAD,CACEd,MAAM,OACNU,aAAc,CACZC,GAAI,iCAENM,QAAQ,OACRL,UAAU,SANZ,iGASgC,uBAAGP,OAAO,SAASC,KAAMb,GAAzB,aAThC,kB,kCC/CV,yEA8CeyB,IAvCF,SAAAC,GAAU,IAEnBC,EAYED,EAZFC,MACAC,EAWEF,EAXFE,KAOAC,GAIEH,EAVFhB,KAUEgB,EATFI,WASEJ,EARFK,WAQEL,EAPFM,OAOEN,EANFO,QAMEP,EALFQ,KAKER,EAJFG,MAEAM,GAEET,EAHFU,MAGEV,EAFFS,cACAE,EACEX,EADFW,SAEIC,EAAeH,GAAgBA,EAAaI,YAAY7B,KACxD8B,EAAgBL,GAAgBA,EAAaI,YAAYZ,MACzDc,EAAWJ,GAAYA,EAASE,YAAY7B,KAC5CgC,EAAYL,GAAYA,EAASE,YAAYZ,MAEnD,OACE,kBAAC,IAAD,CAAKgB,UAAU,iBAAiBpC,MAAM,QACpC,kBAAC,IAAD,CAAKqC,WAAW,UAAUC,SAAS,QAChClB,GAEH,kBAAC,IAAD,CAAKiB,WAAW,cAAcC,SAAS,OAAOC,aAAa,QACxDlB,GAEH,yBAAKmB,wBAAyB,CAAEC,OAAQnB,KACxC,kBAAC,IAAD,CACES,aAAcA,EACdE,cAAeA,EACfC,SAAUA,EACVC,UAAWA","file":"component---src-templates-resume-js-c6016aa2ef10c7118e50.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { Row, Col, Block, InlineBlock } from \"jsxstyle\";\nimport { Helmet } from \"react-helmet\";\nimport SEO from \"../components/seo\";\nimport Layout from \"../components/layout\";\nimport Post from \"../components/post\";\nimport Img from \"gatsby-image\";\nconst URL = \"https://drive.google.com/file/d/1mbgDZQReKJSd0BnbugT8uPDyUgmeRrYD/view?usp=sharing\"\n\nconst Resume = () => {\n  const data = useStaticQuery(graphql`\n    query ResumeQuery {\n      file: file(absolutePath: { regex: \"assets/resume.jpg/\" }) {\n        childImageSharp {\n          fluid(maxWidth: 1200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `);\n\n  console.log(data)\n\n  return (\n    <>\n      <Helmet>\n        <body id=\"bodybody\" />\n      </Helmet>\n      <Col width=\"100vw\" boxSizing=\"content-box\" alignItems=\"center\">\n        <SEO />\n        <Layout path=\"/resume\">\n        <InlineBlock margin=\"0px 0px 24px 0px\">â†’ Download from <a target=\"_blank\" href={URL}>Google Drive link</a></InlineBlock>\n          <Row\n            border=\"1px solid rgba(0, 0, 0, 0.2)\"\n            boxShadow=\"8px 8px 24px rgba(0, 0, 0, 0.1)\"\n            width=\"90%\"\n            maxWidth=\"900px\"\n            mediaQueries={{\n              md: \"screen and (max-width: 400px)\",\n            }}\n            mdDisplay=\"none\"\n          >\n            <Img style={{width: \"100%\"}} fluid={data.file.childImageSharp.fluid} />\n          </Row>\n          <Row\n            width=\"100%\"\n            mediaQueries={{\n              md: \"screen and (max-width: 400px)\",\n            }}\n            display=\"none\"\n            mdDisplay=\"block\"\n          >\n            Alas! Your screen width is too small to display the resume PDF. \n            Please view my resume through <a target=\"_blank\" href={URL}>this link</a> instead.\n          </Row>\n        </Layout>\n      </Col>\n    </>\n  );\n};\n\nexport default Resume;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Img from \"gatsby-image\";\nimport Navigation from \"./navigation\";\nimport TinyPost from \"./tinyPost\";\nimport { Row, Col, Box } from \"jsxstyle\";\n\nconst Post = props => {\n  let {\n    title,\n    date,\n    path,\n    coverImage,\n    coverVideo,\n    author,\n    excerpt,\n    tags,\n    html,\n    links,\n    previousPost,\n    nextPost,\n  } = props;\n  const previousPath = previousPost && previousPost.frontmatter.path;\n  const previousLabel = previousPost && previousPost.frontmatter.title;\n  const nextPath = nextPost && nextPost.frontmatter.path;\n  const nextLabel = nextPost && nextPost.frontmatter.title;\n\n  return (\n    <Col className=\"post-container\" width=\"100%\">\n      <Box fontFamily=\"Domaine\" fontSize=\"40px\">\n        {title}\n      </Box>\n      <Box fontFamily=\"EB Garamond\" fontSize=\"24px\" marginBottom=\"24px\">\n        {date}\n      </Box>\n      <div dangerouslySetInnerHTML={{ __html: html }} />\n      <Navigation\n        previousPath={previousPath}\n        previousLabel={previousLabel}\n        nextPath={nextPath}\n        nextLabel={nextLabel}\n      />\n    </Col>\n  );\n};\n\nexport default Post;\n"],"sourceRoot":""}