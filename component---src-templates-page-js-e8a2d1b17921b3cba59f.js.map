{"version":3,"sources":["webpack:///./src/components/post.js","webpack:///./src/templates/page.js"],"names":["Post","props","title","date","tags","path","coverImage","coverVideo","author","excerpt","html","previousPost","links","nextPost","previousPath","frontmatter","previousLabel","nextPath","nextLabel","width","alignItems","justifyContent","paddingBottom","position","padding","borderBottom","marginBottom","mediaQueries","sm","smWidth","fontFamily","fontSize","color","join","className","dangerouslySetInnerHTML","__html","BlogPostTemplate","data","pageContext","markdownRemark","autoExcerpt","id","next","previous","useState","scrollY","setScrollY","scrollEventHandler","document","scrollingElement","scrollTop","useEffect","window","addEventListener","removeEventListener","description","text","internal","passInProps","zIndex","left","top","onClick","key","pageQuery"],"mappings":"mHAAA,yEAqEeA,IA9DF,SAAAC,GAAU,IAEnBC,EAYED,EAZFC,MACAC,EAWEF,EAXFE,KAMAC,GAKEH,EAVFI,KAUEJ,EATFK,WASEL,EARFM,WAQEN,EAPFO,OAOEP,EANFQ,QAMER,EALFG,MACAM,EAIET,EAJFS,KAEAC,GAEEV,EAHFW,MAGEX,EAFFU,cACAE,EACEZ,EADFY,SAEIC,EAAeH,GAAgBA,EAAaI,YAAYV,KACxDW,EAAgBL,GAAgBA,EAAaI,YAAYb,MACzDe,EAAWJ,GAAYA,EAASE,YAAYV,KAC5Ca,EAAYL,GAAYA,EAASE,YAAYb,MAEnD,OACE,kBAAC,IAAD,CAAKiB,MAAM,OAAOC,WAAW,SAASC,eAAe,aAAaC,cAAc,QAC9E,kBAAC,IAAD,CACEC,SAAS,WACTC,QAAQ,oBACRC,aAAa,iBACbC,aAAa,OACbC,aAAc,CACZC,GAAI,iCAENC,QAAQ,OACRV,MAAM,SAEN,kBAAC,IAAD,CAAKW,WAAW,UAAUC,SAAS,QAChC7B,GAEH,kBAAC,IAAD,CAAK4B,WAAW,cAAcC,SAAS,QACpC5B,GAEH,kBAAC,IAAD,CAAK6B,MAAM,OAAOF,WAAW,cAAcC,SAAS,OAAOL,aAAa,QACrEtB,EAAK6B,KAAK,QAGf,yBAAKC,UAAU,wBAAwBC,wBAAyB,CAAEC,OAAQ1B,KAC1E,kBAAC,IAAD,CACEiB,aAAc,CACZC,GAAI,iCAENC,QAAQ,OACRV,MAAM,SAEN,kBAAC,IAAD,CACEL,aAAcA,EACdE,cAAeA,EACfC,SAAUA,EACVC,UAAWA,Q,kCC9DrB,0JAwFemB,UA3EU,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAAkB,EAgB9CD,EAAKE,eAhByC,IAEhDzB,YACEb,EAH8C,EAG9CA,MACAC,EAJ8C,EAI9CA,KACAE,EAL8C,EAK9CA,KACAG,EAN8C,EAM9CA,OACAF,EAP8C,EAO9CA,WACAC,EAR8C,EAQ9CA,WACAK,EAT8C,EAS9CA,MACAH,EAV8C,EAU9CA,QACAL,EAX8C,EAW9CA,KAEOqC,EAbuC,EAahDhC,QACAiC,EAdgD,EAchDA,GACAhC,EAfgD,EAehDA,KAEMiC,EAAmBJ,EAAnBI,KAAMC,EAAaL,EAAbK,SAjBoC,EAmBpBC,oBAAS,GAAhCC,EAnB2C,KAmBlCC,EAnBkC,KAqB5CC,EAAqB,WACtBC,SAASC,iBAAiBC,UAAY,GACvCJ,GAAW,GAEXA,GAAW,IAef,OAXAK,qBAAU,WAMR,OAJEC,OAAOC,iBAAiB,SAAUN,GAI7B,WACLK,OAAOE,oBAAoB,SAAUP,MAEtC,IAGD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK9C,MAAOA,EAAOsD,YAAa/C,GAAWgC,IAC1CK,EAAY,kBAAC,IAAD,CACXW,KAAK,kBACLC,UAAU,EACVC,YACE,CAACpC,SAAS,QACVqC,OAAO,IACPC,KAAM,KACNC,IAAI,KACJ5B,UAAU,gBACVjC,MAAO,CAAC8D,QAAU,WAAOd,SAASC,iBAAiBC,UAAY,OAG7D,GAEN,kBAAC,IAAD,CACEa,IAAKtB,EACLxC,MAAOA,EACPC,KAAMA,EACNE,KAAMA,EACNG,OAAQA,EACRF,WAAYA,EACZC,WAAYA,EACZK,MAAOA,EACPF,KAAMA,EACNN,KAAMA,EACNO,aAAciC,EACd/B,SAAU8B,MAQX,IAAMsB,EAAS","file":"component---src-templates-page-js-e8a2d1b17921b3cba59f.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Img from \"gatsby-image\";\nimport Navigation from \"./navigation\";\nimport TinyPost from \"./tinyPost\";\nimport { Row, Col, Box } from \"jsxstyle\";\n\nconst Post = props => {\n  let {\n    title,\n    date,\n    path,\n    coverImage,\n    coverVideo,\n    author,\n    excerpt,\n    tags,\n    html,\n    links,\n    previousPost,\n    nextPost,\n  } = props;\n  const previousPath = previousPost && previousPost.frontmatter.path;\n  const previousLabel = previousPost && previousPost.frontmatter.title;\n  const nextPath = nextPost && nextPost.frontmatter.path;\n  const nextLabel = nextPost && nextPost.frontmatter.title;\n\n  return (\n    <Col width=\"100%\" alignItems=\"center\" justifyContent=\"flex-start\" paddingBottom=\"12px\">\n      <Box\n        position=\"relative\"\n        padding=\"48px 0px 12px 0px\"\n        borderBottom=\"1px solid #CCC\"\n        marginBottom=\"24px\"\n        mediaQueries={{\n          sm: \"screen and (max-width: 900px)\"\n        }}\n        smWidth=\"100%\"\n        width=\"900px\"\n      >\n        <Box fontFamily=\"Domaine\" fontSize=\"40px\">\n          {title}\n        </Box>\n        <Box fontFamily=\"EB Garamond\" fontSize=\"24px\">\n          {date}\n        </Box>\n        <Box color=\"#AAA\" fontFamily=\"EB Garamond\" fontSize=\"24px\" marginBottom=\"24px\">\n          {tags.join(\", \")}\n        </Box>\n      </Box>\n      <div className=\"post-detail-container\" dangerouslySetInnerHTML={{ __html: html }} />\n      <Box\n        mediaQueries={{\n          sm: \"screen and (max-width: 900px)\"\n        }}\n        smWidth=\"100%\"\n        width=\"900px\"\n      >\n        <Navigation\n          previousPath={previousPath}\n          previousLabel={previousLabel}\n          nextPath={nextPath}\n          nextLabel={nextLabel}\n        />\n      </Box>\n    </Col>\n  );\n};\n\nexport default Post;\n","import React, {useState, useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\n\nimport SEO from \"../components/seo\";\nimport Layout from \"../components/layout\";\nimport Post from \"../components/post\";\nimport { Helmet } from \"react-helmet\";\nimport LinkButton from \"../components/linkButton\";\nimport {Box} from \"jsxstyle\"\n\nimport '../styles/post-detail.css'\n\nconst BlogPostTemplate = ({ data, pageContext }) => {\n  const {\n    frontmatter: {\n      title,\n      date,\n      path,\n      author,\n      coverImage,\n      coverVideo,\n      links,\n      excerpt,\n      tags,\n    },\n    excerpt: autoExcerpt,\n    id,\n    html,\n  } = data.markdownRemark;\n  const { next, previous } = pageContext;\n\n  const [scrollY, setScrollY] = useState(false);\n\n  const scrollEventHandler = () => {\n    if(document.scrollingElement.scrollTop > 70){\n      setScrollY(true)\n    } else {\n      setScrollY(false)\n    }\n  }\n\n  useEffect(() => {\n    function handleMount() {\n      window.addEventListener('scroll', scrollEventHandler);\n    }\n    handleMount();\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      window.removeEventListener('scroll', scrollEventHandler);\n    };\n  }, []);\n\n  return (\n    <Layout>\n      <SEO title={title} description={excerpt || autoExcerpt} />\n      {scrollY ? ( <LinkButton \n        text=\"Return to top â†‘\" \n        internal={true}\n        passInProps={\n          {position:\"fixed\", \n          zIndex:\"1\", \n          left: \"5%\", \n          top:\"5%\", \n          className:\"return-button\", \n          props: {onClick: (() => {document.scrollingElement.scrollTop = 0})}\n          }\n        }\n      />) : \"\"}\n     \n      <Post\n        key={id}\n        title={title}\n        date={date}\n        path={path}\n        author={author}\n        coverImage={coverImage}\n        coverVideo={coverVideo}\n        links={links}\n        html={html}\n        tags={tags}\n        previousPost={previous}\n        nextPost={next}\n      />\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query($path: String) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      frontmatter {\n        title\n        date\n        path\n        author\n        excerpt\n        tags\n        coverImage {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        coverVideo {\n          publicURL\n        }\n        links\n      }\n      id\n      html\n      excerpt\n    }\n  }\n`;\n"],"sourceRoot":""}