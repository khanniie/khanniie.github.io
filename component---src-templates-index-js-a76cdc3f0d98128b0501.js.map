{"version":3,"sources":["webpack:///./src/templates/index.js"],"names":["postsQuery","Index","data","pageContext","nextPagePath","previousPagePath","posts","allMarkdownRemark","edges","sortedPosts","sort","post1","post2","node","frontmatter","order","width","boxSizing","alignItems","path","padding","mediaQueries","sm","md","lg","smPadding","mdPadding","mdWidth","fontStyle","color","marginBottom","map","index","id","excerpt","title","date","author","coverImage","coverVideo","links","tags","readMoreButton","className","key","previousPath","previousLabel","nextPath","nextLabel"],"mappings":"2FAAA,mJAwGaA,EAAU,aAkCRC,UAhID,SAAC,GAA+D,IAA7DC,EAA4D,EAA5DA,KAA4D,IAAtDC,YAAeC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,iBAEpBC,EAC1BJ,EADFK,kBAAqBC,MAGjBC,EAAcH,EAAMI,MAAK,SAACC,EAAOC,GAIrC,OAHmBD,EAAME,KAAKC,YAAYC,MACvBH,EAAMC,KAAKC,YAAYC,MAGjC,GAEC,IAETT,GAEH,OACE,oCACE,kBAAC,IAAD,CAAKU,MAAM,OAAOC,UAAU,cAAcC,WAAW,UACnD,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAQC,KAAK,KACX,kBAAC,IAAD,CACEC,QAAQ,wBACRC,aAAc,CACZC,GAAI,gCACJC,GAAI,uDACJC,GAAI,kCAENC,UAAU,oBACVC,UAAU,oBACVC,QAAQ,SATV,6PAgBA,kBAAC,IAAD,CACEC,UAAU,SACVC,MAAM,qBACNC,aAAa,QAHf,0CAOA,kBAAC,IAAD,KACGrB,EAAYsB,KAAI,WAAWC,GAAW,IAAnBnB,EAAkB,EAAlBA,KAAkB,GAgBhCA,EAdFoB,GAcEpB,EAbFqB,QAaErB,EAZFC,aACEqB,EALgC,EAKhCA,MACAC,EANgC,EAMhCA,KACAjB,EAPgC,EAOhCA,KACAkB,EARgC,EAQhCA,OACAC,EATgC,EAShCA,WACAC,EAVgC,EAUhCA,WACAC,EAXgC,EAWhCA,MACAN,EAZgC,EAYhCA,QACAO,EAbgC,EAahCA,KACAC,EAdgC,EAchCA,eAIJ,OACE,yBAAKC,UAAW,QAAUX,EAAOY,IAAK,QAAUZ,GAC9C,kBAAC,IAAD,CACEG,MAAOA,EACPC,KAAMA,EACNjB,KAAMA,EACNkB,OAAQA,EACRC,WAAYA,EACZC,WAAYA,EACZC,MAAOA,EACPC,KAAMA,EACNC,eAAgBA,EAChBR,QAASA,SAMnB,kBAAC,IAAD,CACEW,aAAcxC,EACdyC,cAAc,cACdC,SAAU3C,EACV4C,UAAU","file":"component---src-templates-index-js-a76cdc3f0d98128b0501.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport { Row, Col, Block } from \"jsxstyle\";\nimport { Helmet } from \"react-helmet\";\nimport SEO from \"../components/seo\";\nimport Layout from \"../components/layout\";\nimport TinyPost from \"../components/tinyPost\";\nimport Navigation from \"../components/navigation\";\n\nconst Index = ({ data, pageContext: { nextPagePath, previousPagePath } }) => {\n  const {\n    allMarkdownRemark: { edges: posts },\n  } = data;\n\n  const sortedPosts = posts.sort((post1, post2) => {\n    const postOrder1 = post1.node.frontmatter.order;\n    const postOrder2 = post2.node.frontmatter.order;\n\n    if (postOrder1 > postOrder2) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }, posts);\n\n  return (\n    <>\n      <Col width=\"100%\" boxSizing=\"content-box\" alignItems=\"center\">\n        <SEO />\n        <Layout path=\"/\">\n          <Row\n            padding=\"64px 112px 96px 112px\"\n            mediaQueries={{\n              sm: \"screen and (max-width: 640px)\",\n              md: \"screen and (min-width: 640px) and (max-width: 950px)\",\n              lg: \"screen and (min-width: 1280px)\",\n            }}\n            smPadding=\"16px 0px 56px 0px\"\n            mdPadding=\"16px 0px 64px 0px\"\n            mdWidth=\"640px\"\n          >\n            Hello ðŸ‘‹ I'm Connie! I'm currently a senior at Carnegie Mellon,\n            studying Computer Science and Fine Art, with an additional major in\n            Human-Computer Interaction. I love creating playful tools for others\n            and researching new possibilities in technology.\n          </Row>\n          <Row\n            fontStyle=\"italic\"\n            color=\"rgba(0, 0, 0, 0.4)\"\n            marginBottom=\"16px\"\n          >\n            Scroll down to view selected projects.\n          </Row>\n          <Col>\n            {sortedPosts.map(({ node }, index) => {\n              const {\n                id,\n                excerpt: autoExcerpt,\n                frontmatter: {\n                  title,\n                  date,\n                  path,\n                  author,\n                  coverImage,\n                  coverVideo,\n                  links,\n                  excerpt,\n                  tags,\n                  readMoreButton,\n                },\n              } = node;\n\n              return (\n                <div className={\"index\" + index} key={\"index\" + index}>\n                  <TinyPost\n                    title={title}\n                    date={date}\n                    path={path}\n                    author={author}\n                    coverImage={coverImage}\n                    coverVideo={coverVideo}\n                    links={links}\n                    tags={tags}\n                    readMoreButton={readMoreButton}\n                    excerpt={excerpt}\n                  />\n                </div>\n              );\n            })}\n          </Col>\n          <Navigation\n            previousPath={previousPagePath}\n            previousLabel=\"Newer posts\"\n            nextPath={nextPagePath}\n            nextLabel=\"Older posts\"\n          />\n        </Layout>\n      </Col>\n    </>\n  );\n};\n\n//sort: { fields: [frontmatter___date], order: DESC }\nexport const postsQuery = graphql`\n  query($limit: Int!, $skip: Int!) {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"//posts//\" } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          excerpt\n          frontmatter {\n            title\n            date\n            path\n            author\n            excerpt\n            tags\n            coverImage {\n              publicURL\n            }\n            coverVideo {\n              publicURL\n            }\n            links\n            readMoreButton\n            order\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Index;\n"],"sourceRoot":""}